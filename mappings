# vim: filetype=muttrc

# macro index A \
#     "<tag-pattern>~N<enter><tag-prefix><clear-flag>N<untag-pattern>.<enter>" \
#     "mark all new as read"
macro index A "T~U<enter><tag-prefix><clear-flag>N<untag-pattern>.<enter>" "Mark all messages as read"


bind index j next-entry
bind index k previous-entry
bind pager j next-line
bind pager k previous-line

bind attach,index,pager \CD next-page
bind attach,index,pager \CU previous-page

# Pager: make 'g' a prefix, then map gg/G
bind pager g noop
bind pager gg top
bind pager G  bottom

# Index & Attach: make 'g' a prefix, then map gg/G
bind attach,index g noop
bind attach,index gg first-entry
bind attach,index G  last-entry

# Reply to all recipients
bind index,pager R group-reply

# Press P to add contact to Khard address book
# macro index,pager P \
#     "<pipe-message>khard add-email<return>" \
#     "add the sender email address to khard"


# Auto-complete email addresses by pushing tab
bind editor <Tab> complete-query

# set wait_key = no
# macro index,pager G "<shell-escape>mbsync -a<enter><sync-mailbox><enter>" "Get mail"
# macro index,pager G "<shell-escape>mbsync -a<enter><sync-mailbox><enter><shell-escape>notify-send 'NeoMutt' 'Mail sync complete'<enter>" "Get mail"

# Add current sender to address book
macro index,pager P "<pipe-message>abook --add-email<return>" "Add this sender to Abook"
# Attach images from clipboard
# macro compose I "<attach-file><shell-escape> tmpfile=$(mktemp --suffix=.png) && wl-paste -t image/png > "$tmpfile" && echo "$tmpfile"<enter><enter>" "attach image from clipboard"
# macro compose I "<shell-escape>tmpfile=$(mktemp --suffix=.png) && wl-paste -t image/png > \"$tmpfile\" && echo \"$tmpfile\" > /tmp/last_clip\n<attach-file>`cat /tmp/last_clip`<enter>" "attach image from clipboard"
# macro compose P "<shell-escape>tmpfile=$(mktemp --suffix=.png) && wl-paste -t image/png > \"$tmpfile\" && echo \"$tmpfile\" \n<attach-file>`cat /tmp/last_clip`<enter>" "Attach clipboard image"
#
# to open attachment in nvim
bind attach <Enter> view-mailcap
bind attach <Return> view-mailcap

